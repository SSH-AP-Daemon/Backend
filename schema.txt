CREATE TABLE User (
    User_name VARCHAR(255) PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Email VARCHAR(255),
    Contact_number VARCHAR(20) NOT NULL,
    User_type VARCHAR(50) CHECK (User_type IN ('ADMIN', 'CITIZEN', 'GOVERNMENT_AGENCY', 'PANCHAYAT_EMPLOYEE')) NOT NULL,
    Citizen_fk INT REFERENCES Citizen(Citizen_Id),
    Government_agencies_fk INT REFERENCES Government_agencies(Agency_Id),
    Admin_fk INT REFERENCES Admin(Admin_Id),
    Panchayat_employee_fk INT REFERENCES Panchayat_employee(Member_Id)
);

CREATE TABLE Citizen (
    Citizen_Id INT PRIMARY KEY,
    User_name INT UNIQUE,
    Date_of_birth DATE,
    Date_of_death DATE,
    Gender VARCHAR(10) CHECK (Gender IN ('Male', 'Female', 'Other')),
    Address TEXT,
    Educational_qualification VARCHAR(50) CHECK (Educational_qualification IN ('Illiterate', 'Primary', 'Secondary', '10th', '12th', 'Graduate', 'Post-Graduate')),
    Occupation VARCHAR(255),
    Family_fk INT,
    FOREIGN KEY (Family_fk) REFERENCES Family(Family_Id),
    FOREIGN KEY (User_name) REFERENCES User(User_name)
);

CREATE TABLE Government_agencies (
    Agency_Id INT PRIMARY KEY,
    User_name INT UNIQUE,
    Role VARCHAR(255),
    FOREIGN KEY (User_name) REFERENCES User(User_name)
);

CREATE TABLE Admin (
    Admin_id INT PRIMARY KEY,
    User_name INT UNIQUE,
    Gender VARCHAR(10),
    Date_of_birth DATE,
    Address VARCHAR(255),
    FOREIGN KEY (User_name) REFERENCES User(User_name)
);

CREATE TABLE Panchayat_employee (
    Member_Id INT PRIMARY KEY,
    Role VARCHAR(255),
    User_name INT UNIQUE,
    Citizen_fk INT UNIQUE,
    FOREIGN KEY (Citizen_fk) REFERENCES Citizen(Citizen_Id),
    FOREIGN KEY (User_name) REFERENCES User(User_name)
);

CREATE TABLE Census (
    Census_id INT PRIMARY KEY,
    Year INT,
    Total_population INT,
    Male_population INT,
    Female_population INT,
    Literacy_Rate FLOAT
);

CREATE TABLE Agricultural_land (
    Agri_land_Id INT PRIMARY KEY,
    Year INT,
    Crop_type VARCHAR(255),
    Area_cultivated FLOAT,
    Yield FLOAT,
    Season VARCHAR(50),
    Asset_fk INT,
    FOREIGN KEY (Asset_fk) REFERENCES Assets(Asset_Id)
);

CREATE TABLE Financial_data (
    Financial_Id INT PRIMARY KEY,
    Annual_Income FLOAT,
    Income_source VARCHAR(255),
    Tax_paid FLOAT,
    Tax_liability FLOAT,
    Debt_liability FLOAT,
    Credit_score INT,
    Last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Citizen_fk INT,
    FOREIGN KEY (Citizen_fk) REFERENCES Citizen(Citizen_Id)
);

CREATE TABLE Environmental_data (
    Year INT PRIMARY KEY,
    Aqi FLOAT,
    Forest_cover FLOAT,
    Odf FLOAT,
    Afforestation_data FLOAT,
    Precipitation FLOAT,
    Water_quality FLOAT
);

CREATE TABLE Family (
    Family_Id INT PRIMARY KEY,
    Address TEXT,
    Family_head INT,
    FOREIGN KEY (Family_head) REFERENCES Citizen(Citizen_Id)
);

CREATE TABLE Welfare_schemes (
    Scheme_Id INT PRIMARY KEY,
    Scheme_name VARCHAR(255),
    Description TEXT,
    Application_deadline DATE
);

CREATE TABLE Infrastructure (
    Infra_Id INT PRIMARY KEY,
    Description TEXT,
    Location TEXT,
    Funding FLOAT,
    Actual_cost FLOAT
);

CREATE TABLE Activity_log (
    Log_Id INT PRIMARY KEY,
    Time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Affected_user_fk INT,
    From_value TEXT,
    New_val TEXT,
    Old_val TEXT,
    User_name_fk INT,
    FOREIGN KEY (Affected_user_fk) REFERENCES User(User_name),
    FOREIGN KEY (User_name_fk) REFERENCES User(User_name)
);

CREATE TABLE Issues (
    Issue_Id INT PRIMARY KEY,
    Citizen_fk INT,
    Description TEXT,
    status VARCHAR(50),
    FOREIGN KEY (Citizen_fk) REFERENCES Citizen(Citizen_Id)
);

CREATE TABLE Documents (
    Doc_Id INT PRIMARY KEY,
    Citizen_fk INT,
    Type VARCHAR(255),
    Pdf_data BYTEA NOT NULL,
    FOREIGN KEY (Citizen_fk) REFERENCES Citizen(Citizen_Id)
);

CREATE TABLE Assets (
    Asset_Id INT PRIMARY KEY,
    Citizen_fk INT,
    Type VARCHAR(255),
    Valuation FLOAT,
    Is_deleted BOOLEAN,
    FOREIGN KEY (Citizen_fk) REFERENCES Citizen(Citizen_Id)
);

CREATE TABLE Welfare_enrol (
    Citizen_fk INT,
    Scheme_fk INT,
    PRIMARY KEY (Citizen_fk, Scheme_fk),
    status VARCHAR(50),
    FOREIGN KEY (Citizen_fk) REFERENCES Citizen(Citizen_Id),
    FOREIGN KEY (Scheme_fk) REFERENCES Welfare_schemes(Scheme_Id)
)
